<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/10/10 10:24:00 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.accountincentive.dao.IAccountIncentiveDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.accountincentive.entity.AccountIncentive" id="resultMap">
        <id property="accountIncentiveCode" column="accountincentivecode" />
        <result property="accountIncentiveTime" column="accountincentivetime" />
        <result property="loveNum" column="lovenum" />
        <result property="lovePrice" column="loveprice" />
        <result property="messengerBean" column="messengerbean" />
        <result property="source" column="source" />
        <result property="accountCode" column="accountcode" />
        <result property="incentiveMode" column="incentivemode" />
    </resultMap>

    <sql id="baseCol">
        accountincentivecode, accountincentivetime, lovenum, loveprice, messengerbean, source, accountcode, incentivemode
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="accountIncentiveCode != null"><![CDATA[ and accountincentivecode like #{accountIncentiveCode} ]]></if>
            <if test="accountIncentiveCode_enum != null">
                <![CDATA[ and accountincentivecode in ]]>
                <foreach collection="accountIncentiveCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountIncentiveTime != null"><![CDATA[ and accountincentivetime = #{accountIncentiveTime} ]]></if>
            <if test="accountIncentiveTime_r_min != null"><![CDATA[ and accountincentivetime >= #{accountIncentiveTime_r_min} and accountincentivetime < #{accountIncentiveTime_r_max} ]]></if>
            <if test="loveNum != null"><![CDATA[ and lovenum = #{loveNum} ]]></if>
            <if test="loveNum_r_min != null"><![CDATA[ and lovenum >= #{loveNum_r_min} and lovenum <= #{loveNum_r_max} ]]></if>
            <if test="loveNum_enum != null">
                <![CDATA[ and lovenum in ]]>
                <foreach collection="loveNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="lovePrice != null"><![CDATA[ and loveprice = #{lovePrice} ]]></if>
            <if test="lovePrice_r_min != null"><![CDATA[ and loveprice >= #{lovePrice_r_min} and loveprice <= #{lovePrice_r_max} ]]></if>
            <if test="lovePrice_enum != null">
                <![CDATA[ and loveprice in ]]>
                <foreach collection="lovePrice_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="messengerBean != null"><![CDATA[ and messengerbean = #{messengerBean} ]]></if>
            <if test="messengerBean_r_min != null"><![CDATA[ and messengerbean >= #{messengerBean_r_min} and messengerbean <= #{messengerBean_r_max} ]]></if>
            <if test="messengerBean_enum != null">
                <![CDATA[ and messengerbean in ]]>
                <foreach collection="messengerBean_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="source != null"><![CDATA[ and source like #{source} ]]></if>
            <if test="source_enum != null">
                <![CDATA[ and source in ]]>
                <foreach collection="source_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="incentiveMode != null"><![CDATA[ and incentivemode = #{incentiveMode} ]]></if>
            <if test="incentiveMode_r_min != null"><![CDATA[ and incentivemode >= #{incentiveMode_r_min} and incentivemode <= #{incentiveMode_r_max} ]]></if>
            <if test="incentiveMode_enum != null">
                <![CDATA[ and incentivemode in ]]>
                <foreach collection="incentiveMode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'accountIncentiveCode'"><![CDATA[ accountincentivecode like #{item.value} ]]></if>
                    <if test="item.name == 'source'"><![CDATA[ source like #{item.value} ]]></if>
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'accountIncentiveCode_desc'"><![CDATA[ accountincentivecode desc, ]]></if>
            <if test="_orderBy == 'accountIncentiveCode_asc'"><![CDATA[ accountincentivecode, ]]></if>
            <if test="_orderBy == 'accountIncentiveTime_desc'"><![CDATA[ accountincentivetime desc, ]]></if>
            <if test="_orderBy == 'accountIncentiveTime_asc'"><![CDATA[ accountincentivetime, ]]></if>
            <if test="_orderBy == 'loveNum_desc'"><![CDATA[ lovenum desc, ]]></if>
            <if test="_orderBy == 'loveNum_asc'"><![CDATA[ lovenum, ]]></if>
            <if test="_orderBy == 'lovePrice_desc'"><![CDATA[ loveprice desc, ]]></if>
            <if test="_orderBy == 'lovePrice_asc'"><![CDATA[ loveprice, ]]></if>
            <if test="_orderBy == 'messengerBean_desc'"><![CDATA[ messengerbean desc, ]]></if>
            <if test="_orderBy == 'messengerBean_asc'"><![CDATA[ messengerbean, ]]></if>
            <if test="_orderBy == 'source_desc'"><![CDATA[ source desc, ]]></if>
            <if test="_orderBy == 'source_asc'"><![CDATA[ source, ]]></if>
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
            <if test="_orderBy == 'incentiveMode_desc'"><![CDATA[ incentivemode desc, ]]></if>
            <if test="_orderBy == 'incentiveMode_asc'"><![CDATA[ incentivemode, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.accountincentive.entity.AccountIncentive">
        insert into
        dyb_accountincentive(accountincentivecode,accountincentivetime,lovenum,loveprice,messengerbean,source,accountcode,incentivemode)
        values(#{accountIncentiveCode},#{accountIncentiveTime},#{loveNum},#{lovePrice},#{messengerBean},#{source},#{accountCode},#{incentiveMode});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.accountincentive.entity.AccountIncentive">
        update dyb_accountincentive
        set accountincentivetime=#{accountIncentiveTime},lovenum=#{loveNum},loveprice=#{lovePrice},messengerbean=#{messengerBean},source=#{source},accountcode=#{accountCode},incentivemode=#{incentiveMode}
        where accountincentivecode=#{accountIncentiveCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_accountincentive where accountincentivecode=#{accountIncentiveCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_accountincentive
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_accountincentive where accountincentivecode=#{accountIncentiveCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_accountincentive where accountincentivecode=#{accountIncentiveCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_accountincentive
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_accountincentive
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_accountincentive
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


