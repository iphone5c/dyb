<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/18 19:24:05 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.businessprocess.dao.IBusinessDocHeadDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.businessprocess.entity.BusinessDocHead" id="resultMap">
        <id property="docCode" column="doccode" />
        <result property="summary" column="summary" />
        <result property="businessDocStatus" column="businessdocstatus" />
        <result property="businessType" column="businesstype" />
        <result property="bodyKeyCode" column="bodykeycode" />
        <result property="bodyClassName" column="bodyclassname" />
        <result property="runned" column="runned" />
        <result property="confirmed" column="confirmed" />
        <result property="linkMan" column="linkman" />
        <result property="linkManTel" column="linkmantel" />
        <result property="remark" column="remark" />
        <result property="createPerson" column="createperson" />
        <result property="createTime" column="createtime" />
        <result property="modifyPerson" column="modifyperson" />
        <result property="modifyTime" column="modifytime" />
        <result property="version" column="version" />
        <result property="enable" column="enable" />
    </resultMap>

    <sql id="baseCol">
        doccode, summary, businessdocstatus, businesstype, bodykeycode, bodyclassname, runned, confirmed, linkman, linkmantel, remark, createperson, createtime, modifyperson, modifytime, version, enable
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="docCode != null"><![CDATA[ and doccode like #{docCode} ]]></if>
            <if test="docCode_enum != null">
                <![CDATA[ and doccode in ]]>
                <foreach collection="docCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="summary != null"><![CDATA[ and summary like #{summary} ]]></if>
            <if test="summary_enum != null">
                <![CDATA[ and summary in ]]>
                <foreach collection="summary_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="businessDocStatus != null"><![CDATA[ and businessdocstatus like #{businessDocStatus} ]]></if>
            <if test="businessDocStatus_enum != null">
                <![CDATA[ and businessdocstatus in ]]>
                <foreach collection="businessDocStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="businessType != null"><![CDATA[ and businesstype = #{businessType} ]]></if>
            <if test="businessType_r_min != null"><![CDATA[ and businesstype >= #{businessType_r_min} and businesstype <= #{businessType_r_max} ]]></if>
            <if test="businessType_enum != null">
                <![CDATA[ and businesstype in ]]>
                <foreach collection="businessType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bodyKeyCode != null"><![CDATA[ and bodykeycode like #{bodyKeyCode} ]]></if>
            <if test="bodyKeyCode_enum != null">
                <![CDATA[ and bodykeycode in ]]>
                <foreach collection="bodyKeyCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bodyClassName != null"><![CDATA[ and bodyclassname like #{bodyClassName} ]]></if>
            <if test="bodyClassName_enum != null">
                <![CDATA[ and bodyclassname in ]]>
                <foreach collection="bodyClassName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="runned != null"><![CDATA[ and runned = #{runned} ]]></if>
            <if test="confirmed != null"><![CDATA[ and confirmed = #{confirmed} ]]></if>
            <if test="linkMan != null"><![CDATA[ and linkman like #{linkMan} ]]></if>
            <if test="linkMan_enum != null">
                <![CDATA[ and linkman in ]]>
                <foreach collection="linkMan_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="linkManTel != null"><![CDATA[ and linkmantel like #{linkManTel} ]]></if>
            <if test="linkManTel_enum != null">
                <![CDATA[ and linkmantel in ]]>
                <foreach collection="linkManTel_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="remark != null"><![CDATA[ and remark like #{remark} ]]></if>
            <if test="remark_enum != null">
                <![CDATA[ and remark in ]]>
                <foreach collection="remark_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createPerson != null"><![CDATA[ and createperson like #{createPerson} ]]></if>
            <if test="createPerson_enum != null">
                <![CDATA[ and createperson in ]]>
                <foreach collection="createPerson_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="modifyPerson != null"><![CDATA[ and modifyperson like #{modifyPerson} ]]></if>
            <if test="modifyPerson_enum != null">
                <![CDATA[ and modifyperson in ]]>
                <foreach collection="modifyPerson_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="modifyTime != null"><![CDATA[ and modifytime = #{modifyTime} ]]></if>
            <if test="modifyTime_r_min != null"><![CDATA[ and modifytime >= #{modifyTime_r_min} and modifytime < #{modifyTime_r_max} ]]></if>
            <if test="version != null"><![CDATA[ and version like #{version} ]]></if>
            <if test="version_enum != null">
                <![CDATA[ and version in ]]>
                <foreach collection="version_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="enable != null"><![CDATA[ and enable = #{enable} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'docCode'"><![CDATA[ doccode like #{item.value} ]]></if>
                    <if test="item.name == 'summary'"><![CDATA[ summary like #{item.value} ]]></if>
                    <if test="item.name == 'businessDocStatus'"><![CDATA[ businessdocstatus like #{item.value} ]]></if>
                    <if test="item.name == 'bodyKeyCode'"><![CDATA[ bodykeycode like #{item.value} ]]></if>
                    <if test="item.name == 'bodyClassName'"><![CDATA[ bodyclassname like #{item.value} ]]></if>
                    <if test="item.name == 'linkMan'"><![CDATA[ linkman like #{item.value} ]]></if>
                    <if test="item.name == 'linkManTel'"><![CDATA[ linkmantel like #{item.value} ]]></if>
                    <if test="item.name == 'remark'"><![CDATA[ remark like #{item.value} ]]></if>
                    <if test="item.name == 'createPerson'"><![CDATA[ createperson like #{item.value} ]]></if>
                    <if test="item.name == 'modifyPerson'"><![CDATA[ modifyperson like #{item.value} ]]></if>
                    <if test="item.name == 'version'"><![CDATA[ version like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'docCode_desc'"><![CDATA[ doccode desc, ]]></if>
            <if test="_orderBy == 'docCode_asc'"><![CDATA[ doccode, ]]></if>
            <if test="_orderBy == 'summary_desc'"><![CDATA[ summary desc, ]]></if>
            <if test="_orderBy == 'summary_asc'"><![CDATA[ summary, ]]></if>
            <if test="_orderBy == 'businessDocStatus_desc'"><![CDATA[ businessdocstatus desc, ]]></if>
            <if test="_orderBy == 'businessDocStatus_asc'"><![CDATA[ businessdocstatus, ]]></if>
            <if test="_orderBy == 'businessType_desc'"><![CDATA[ businesstype desc, ]]></if>
            <if test="_orderBy == 'businessType_asc'"><![CDATA[ businesstype, ]]></if>
            <if test="_orderBy == 'bodyKeyCode_desc'"><![CDATA[ bodykeycode desc, ]]></if>
            <if test="_orderBy == 'bodyKeyCode_asc'"><![CDATA[ bodykeycode, ]]></if>
            <if test="_orderBy == 'bodyClassName_desc'"><![CDATA[ bodyclassname desc, ]]></if>
            <if test="_orderBy == 'bodyClassName_asc'"><![CDATA[ bodyclassname, ]]></if>
            <if test="_orderBy == 'runned_desc'"><![CDATA[ runned desc, ]]></if>
            <if test="_orderBy == 'runned_asc'"><![CDATA[ runned, ]]></if>
            <if test="_orderBy == 'confirmed_desc'"><![CDATA[ confirmed desc, ]]></if>
            <if test="_orderBy == 'confirmed_asc'"><![CDATA[ confirmed, ]]></if>
            <if test="_orderBy == 'linkMan_desc'"><![CDATA[ linkman desc, ]]></if>
            <if test="_orderBy == 'linkMan_asc'"><![CDATA[ linkman, ]]></if>
            <if test="_orderBy == 'linkManTel_desc'"><![CDATA[ linkmantel desc, ]]></if>
            <if test="_orderBy == 'linkManTel_asc'"><![CDATA[ linkmantel, ]]></if>
            <if test="_orderBy == 'remark_desc'"><![CDATA[ remark desc, ]]></if>
            <if test="_orderBy == 'remark_asc'"><![CDATA[ remark, ]]></if>
            <if test="_orderBy == 'createPerson_desc'"><![CDATA[ createperson desc, ]]></if>
            <if test="_orderBy == 'createPerson_asc'"><![CDATA[ createperson, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'modifyPerson_desc'"><![CDATA[ modifyperson desc, ]]></if>
            <if test="_orderBy == 'modifyPerson_asc'"><![CDATA[ modifyperson, ]]></if>
            <if test="_orderBy == 'modifyTime_desc'"><![CDATA[ modifytime desc, ]]></if>
            <if test="_orderBy == 'modifyTime_asc'"><![CDATA[ modifytime, ]]></if>
            <if test="_orderBy == 'version_desc'"><![CDATA[ version desc, ]]></if>
            <if test="_orderBy == 'version_asc'"><![CDATA[ version, ]]></if>
            <if test="_orderBy == 'enable_desc'"><![CDATA[ enable desc, ]]></if>
            <if test="_orderBy == 'enable_asc'"><![CDATA[ enable, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.businessprocess.entity.BusinessDocHead">
        insert into
        dyb_businessdochead(doccode,summary,businessdocstatus,businesstype,bodykeycode,bodyclassname,runned,confirmed,linkman,linkmantel,remark,createperson,createtime,modifyperson,modifytime,version,enable)
        values(#{docCode},#{summary},#{businessDocStatus},#{businessType},#{bodyKeyCode},#{bodyClassName},#{runned},#{confirmed},#{linkMan},#{linkManTel},#{remark},#{createPerson},#{createTime},#{modifyPerson},#{modifyTime},#{version},#{enable});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.businessprocess.entity.BusinessDocHead">
        update dyb_businessdochead
        set summary=#{summary},businessdocstatus=#{businessDocStatus},businesstype=#{businessType},bodykeycode=#{bodyKeyCode},bodyclassname=#{bodyClassName},runned=#{runned},confirmed=#{confirmed},linkman=#{linkMan},linkmantel=#{linkManTel},remark=#{remark},createperson=#{createPerson},createtime=#{createTime},modifyperson=#{modifyPerson},modifytime=#{modifyTime},version=#{version},enable=#{enable}
        where doccode=#{docCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_businessdochead where doccode=#{docCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_businessdochead
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_businessdochead where doccode=#{docCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_businessdochead where doccode=#{docCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_businessdochead
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_businessdochead
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_businessdochead
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


