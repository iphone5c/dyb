<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/27 19:51:28 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.order.dao.IOrderDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.order.entity.Order" id="resultMap">
        <id property="orderCode" column="ordercode" />
        <result property="memberCode" column="membercode" />
        <result property="merchantCode" column="merchantcode" />
        <result property="tradeTime" column="tradetime" />
        <result property="price" column="price" />
        <result property="createTime" column="createtime" />
        <result property="status" column="status" />
        <result property="certificateFile" column="certificatefile" />
    </resultMap>

    <sql id="baseCol">
        ordercode, membercode, merchantcode, tradetime, price, createtime, status, certificatefile
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="orderCode != null"><![CDATA[ and ordercode like #{orderCode} ]]></if>
            <if test="orderCode_enum != null">
                <![CDATA[ and ordercode in ]]>
                <foreach collection="orderCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="memberCode != null"><![CDATA[ and membercode like #{memberCode} ]]></if>
            <if test="memberCode_enum != null">
                <![CDATA[ and membercode in ]]>
                <foreach collection="memberCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="merchantCode != null"><![CDATA[ and merchantcode like #{merchantCode} ]]></if>
            <if test="merchantCode_enum != null">
                <![CDATA[ and merchantcode in ]]>
                <foreach collection="merchantCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="tradeTime != null"><![CDATA[ and tradetime = #{tradeTime} ]]></if>
            <if test="tradeTime_r_min != null"><![CDATA[ and tradetime >= #{tradeTime_r_min} and tradetime < #{tradeTime_r_max} ]]></if>
            <if test="price != null"><![CDATA[ and price = #{price} ]]></if>
            <if test="price_r_min != null"><![CDATA[ and price >= #{price_r_min} and price <= #{price_r_max} ]]></if>
            <if test="price_enum != null">
                <![CDATA[ and price in ]]>
                <foreach collection="price_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="status != null"><![CDATA[ and status like #{status} ]]></if>
            <if test="status_enum != null">
                <![CDATA[ and status in ]]>
                <foreach collection="status_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="certificateFile != null"><![CDATA[ and certificatefile like #{certificateFile} ]]></if>
            <if test="certificateFile_enum != null">
                <![CDATA[ and certificatefile in ]]>
                <foreach collection="certificateFile_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'orderCode'"><![CDATA[ ordercode like #{item.value} ]]></if>
                    <if test="item.name == 'memberCode'"><![CDATA[ membercode like #{item.value} ]]></if>
                    <if test="item.name == 'merchantCode'"><![CDATA[ merchantcode like #{item.value} ]]></if>
                    <if test="item.name == 'status'"><![CDATA[ status like #{item.value} ]]></if>
                    <if test="item.name == 'certificateFile'"><![CDATA[ certificatefile like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'orderCode_desc'"><![CDATA[ ordercode desc, ]]></if>
            <if test="_orderBy == 'orderCode_asc'"><![CDATA[ ordercode, ]]></if>
            <if test="_orderBy == 'memberCode_desc'"><![CDATA[ membercode desc, ]]></if>
            <if test="_orderBy == 'memberCode_asc'"><![CDATA[ membercode, ]]></if>
            <if test="_orderBy == 'merchantCode_desc'"><![CDATA[ merchantcode desc, ]]></if>
            <if test="_orderBy == 'merchantCode_asc'"><![CDATA[ merchantcode, ]]></if>
            <if test="_orderBy == 'tradeTime_desc'"><![CDATA[ tradetime desc, ]]></if>
            <if test="_orderBy == 'tradeTime_asc'"><![CDATA[ tradetime, ]]></if>
            <if test="_orderBy == 'price_desc'"><![CDATA[ price desc, ]]></if>
            <if test="_orderBy == 'price_asc'"><![CDATA[ price, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'status_desc'"><![CDATA[ status desc, ]]></if>
            <if test="_orderBy == 'status_asc'"><![CDATA[ status, ]]></if>
            <if test="_orderBy == 'certificateFile_desc'"><![CDATA[ certificatefile desc, ]]></if>
            <if test="_orderBy == 'certificateFile_asc'"><![CDATA[ certificatefile, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.order.entity.Order">
        insert into
        dyb_order(ordercode,membercode,merchantcode,tradetime,price,createtime,status,certificatefile)
        values(#{orderCode},#{memberCode},#{merchantCode},#{tradeTime},#{price},#{createTime},#{status},#{certificateFile});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.order.entity.Order">
        update dyb_order
        set membercode=#{memberCode},merchantcode=#{merchantCode},tradetime=#{tradeTime},price=#{price},createtime=#{createTime},status=#{status},certificatefile=#{certificateFile}
        where ordercode=#{orderCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_order where ordercode=#{orderCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_order
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_order where ordercode=#{orderCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_order where ordercode=#{orderCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_order
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_order
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_order
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


