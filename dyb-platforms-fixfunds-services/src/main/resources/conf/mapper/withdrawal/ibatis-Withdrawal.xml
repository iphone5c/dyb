<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/10/10 10:32:35 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.withdrawal.dao.IWithdrawalDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.withdrawal.entity.Withdrawal" id="resultMap">
        <id property="withdrawalCode" column="withdrawalcode" />
        <result property="withdrawalType" column="withdrawaltype" />
        <result property="applyWithdrawalNum" column="applywithdrawalnum" />
        <result property="withdrawalNum" column="withdrawalnum" />
        <result property="deductions" column="deductions" />
        <result property="poundage" column="poundage" />
        <result property="bankName" column="bankname" />
        <result property="bankBranch" column="bankbranch" />
        <result property="bankNum" column="banknum" />
        <result property="accountName" column="accountname" />
        <result property="withdrawalAccount" column="withdrawalaccount" />
        <result property="applyTime" column="applytime" />
        <result property="applyStatus" column="applystatus" />
        <result property="createTime" column="createtime" />
        <result property="invoice" column="invoice" />
    </resultMap>

    <sql id="baseCol">
        withdrawalcode, withdrawaltype, applywithdrawalnum, withdrawalnum, deductions, poundage, bankname, bankbranch, banknum, accountname, withdrawalaccount, applytime, applystatus, createtime,invoice
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="withdrawalCode != null"><![CDATA[ and withdrawalcode like #{withdrawalCode} ]]></if>
            <if test="withdrawalCode_enum != null">
                <![CDATA[ and withdrawalcode in ]]>
                <foreach collection="withdrawalCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="withdrawalType != null"><![CDATA[ and withdrawaltype like #{withdrawalType} ]]></if>
            <if test="withdrawalType_enum != null">
                <![CDATA[ and withdrawaltype in ]]>
                <foreach collection="withdrawalType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyWithdrawalNum != null"><![CDATA[ and applywithdrawalnum = #{applyWithdrawalNum} ]]></if>
            <if test="applyWithdrawalNum_r_min != null"><![CDATA[ and applywithdrawalnum >= #{applyWithdrawalNum_r_min} and applywithdrawalnum <= #{applyWithdrawalNum_r_max} ]]></if>
            <if test="applyWithdrawalNum_enum != null">
                <![CDATA[ and applywithdrawalnum in ]]>
                <foreach collection="applyWithdrawalNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="withdrawalNum != null"><![CDATA[ and withdrawalnum = #{withdrawalNum} ]]></if>
            <if test="withdrawalNum_r_min != null"><![CDATA[ and withdrawalnum >= #{withdrawalNum_r_min} and withdrawalnum <= #{withdrawalNum_r_max} ]]></if>
            <if test="withdrawalNum_enum != null">
                <![CDATA[ and withdrawalnum in ]]>
                <foreach collection="withdrawalNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deductions != null"><![CDATA[ and deductions = #{deductions} ]]></if>
            <if test="deductions_r_min != null"><![CDATA[ and deductions >= #{deductions_r_min} and deductions <= #{deductions_r_max} ]]></if>
            <if test="deductions_enum != null">
                <![CDATA[ and deductions in ]]>
                <foreach collection="deductions_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="poundage != null"><![CDATA[ and poundage = #{poundage} ]]></if>
            <if test="poundage_r_min != null"><![CDATA[ and poundage >= #{poundage_r_min} and poundage <= #{poundage_r_max} ]]></if>
            <if test="poundage_enum != null">
                <![CDATA[ and poundage in ]]>
                <foreach collection="poundage_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankName != null"><![CDATA[ and bankname like #{bankName} ]]></if>
            <if test="bankName_enum != null">
                <![CDATA[ and bankname in ]]>
                <foreach collection="bankName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankBranch != null"><![CDATA[ and bankbranch like #{bankBranch} ]]></if>
            <if test="bankBranch_enum != null">
                <![CDATA[ and bankbranch in ]]>
                <foreach collection="bankBranch_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankNum != null"><![CDATA[ and banknum like #{bankNum} ]]></if>
            <if test="bankNum_enum != null">
                <![CDATA[ and banknum in ]]>
                <foreach collection="bankNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountName != null"><![CDATA[ and accountname like #{accountName} ]]></if>
            <if test="accountName_enum != null">
                <![CDATA[ and accountname in ]]>
                <foreach collection="accountName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="withdrawalAccount != null"><![CDATA[ and withdrawalaccount like #{withdrawalAccount} ]]></if>
            <if test="withdrawalAccount_enum != null">
                <![CDATA[ and withdrawalaccount in ]]>
                <foreach collection="withdrawalAccount_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="applyTime != null"><![CDATA[ and applytime = #{applyTime} ]]></if>
            <if test="applyTime_r_min != null"><![CDATA[ and applytime >= #{applyTime_r_min} and applytime < #{applyTime_r_max} ]]></if>
            <if test="applyStatus != null"><![CDATA[ and applystatus like #{applyStatus} ]]></if>
            <if test="applyStatus_enum != null">
                <![CDATA[ and applystatus in ]]>
                <foreach collection="applyStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="invoice != null"><![CDATA[ and invoice like #{invoice} ]]></if>
            <if test="invoice_enum != null">
                <![CDATA[ and invoice in ]]>
                <foreach collection="invoice_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'withdrawalCode'"><![CDATA[ withdrawalcode like #{item.value} ]]></if>
                    <if test="item.name == 'withdrawalType'"><![CDATA[ withdrawaltype like #{item.value} ]]></if>
                    <if test="item.name == 'bankName'"><![CDATA[ bankname like #{item.value} ]]></if>
                    <if test="item.name == 'bankBranch'"><![CDATA[ bankbranch like #{item.value} ]]></if>
                    <if test="item.name == 'bankNum'"><![CDATA[ banknum like #{item.value} ]]></if>
                    <if test="item.name == 'accountName'"><![CDATA[ accountname like #{item.value} ]]></if>
                    <if test="item.name == 'withdrawalAccount'"><![CDATA[ withdrawalaccount like #{item.value} ]]></if>
                    <if test="item.name == 'applyStatus'"><![CDATA[ applystatus like #{item.value} ]]></if>
                    <if test="item.name == 'invoice'"><![CDATA[ invoice like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'withdrawalCode_desc'"><![CDATA[ withdrawalcode desc, ]]></if>
            <if test="_orderBy == 'withdrawalCode_asc'"><![CDATA[ withdrawalcode, ]]></if>
            <if test="_orderBy == 'withdrawalType_desc'"><![CDATA[ withdrawaltype desc, ]]></if>
            <if test="_orderBy == 'withdrawalType_asc'"><![CDATA[ withdrawaltype, ]]></if>
            <if test="_orderBy == 'applyWithdrawalNum_desc'"><![CDATA[ applywithdrawalnum desc, ]]></if>
            <if test="_orderBy == 'applyWithdrawalNum_asc'"><![CDATA[ applywithdrawalnum, ]]></if>
            <if test="_orderBy == 'withdrawalNum_desc'"><![CDATA[ withdrawalnum desc, ]]></if>
            <if test="_orderBy == 'withdrawalNum_asc'"><![CDATA[ withdrawalnum, ]]></if>
            <if test="_orderBy == 'deductions_desc'"><![CDATA[ deductions desc, ]]></if>
            <if test="_orderBy == 'deductions_asc'"><![CDATA[ deductions, ]]></if>
            <if test="_orderBy == 'poundage_desc'"><![CDATA[ poundage desc, ]]></if>
            <if test="_orderBy == 'poundage_asc'"><![CDATA[ poundage, ]]></if>
            <if test="_orderBy == 'bankName_desc'"><![CDATA[ bankname desc, ]]></if>
            <if test="_orderBy == 'bankName_asc'"><![CDATA[ bankname, ]]></if>
            <if test="_orderBy == 'bankBranch_desc'"><![CDATA[ bankbranch desc, ]]></if>
            <if test="_orderBy == 'bankBranch_asc'"><![CDATA[ bankbranch, ]]></if>
            <if test="_orderBy == 'bankNum_desc'"><![CDATA[ banknum desc, ]]></if>
            <if test="_orderBy == 'bankNum_asc'"><![CDATA[ banknum, ]]></if>
            <if test="_orderBy == 'accountName_desc'"><![CDATA[ accountname desc, ]]></if>
            <if test="_orderBy == 'accountName_asc'"><![CDATA[ accountname, ]]></if>
            <if test="_orderBy == 'withdrawalAccount_desc'"><![CDATA[ withdrawalaccount desc, ]]></if>
            <if test="_orderBy == 'withdrawalAccount_asc'"><![CDATA[ withdrawalaccount, ]]></if>
            <if test="_orderBy == 'applyTime_desc'"><![CDATA[ applytime desc, ]]></if>
            <if test="_orderBy == 'applyTime_asc'"><![CDATA[ applytime, ]]></if>
            <if test="_orderBy == 'applyStatus_desc'"><![CDATA[ applystatus desc, ]]></if>
            <if test="_orderBy == 'applyStatus_asc'"><![CDATA[ applystatus, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'invoice_desc'"><![CDATA[ invoice desc, ]]></if>
            <if test="_orderBy == 'invoice_asc'"><![CDATA[ invoice, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.withdrawal.entity.Withdrawal">
        insert into
        dyb_withdrawal(withdrawalcode,withdrawaltype,applywithdrawalnum,withdrawalnum,deductions,poundage,bankname,bankbranch,banknum,accountname,withdrawalaccount,applytime,applystatus,createtime,invoice)
        values(#{withdrawalCode},#{withdrawalType},#{applyWithdrawalNum},#{withdrawalNum},#{deductions},#{poundage},#{bankName},#{bankBranch},#{bankNum},#{accountName},#{withdrawalAccount},#{applyTime},#{applyStatus},#{createTime},#{invoice});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.withdrawal.entity.Withdrawal">
        update dyb_withdrawal
        set withdrawaltype=#{withdrawalType},applywithdrawalnum=#{applyWithdrawalNum},withdrawalnum=#{withdrawalNum},deductions=#{deductions},poundage=#{poundage},bankname=#{bankName},bankbranch=#{bankBranch},banknum=#{bankNum},accountname=#{accountName},withdrawalaccount=#{withdrawalAccount},applytime=#{applyTime},applystatus=#{applyStatus},createtime=#{createTime},invoice=#{invoice}
        where withdrawalcode=#{withdrawalCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_withdrawal where withdrawalcode=#{withdrawalCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_withdrawal
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_withdrawal where withdrawalcode=#{withdrawalCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_withdrawal where withdrawalcode=#{withdrawalCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_withdrawal
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_withdrawal
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_withdrawal
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


