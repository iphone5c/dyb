<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/20 15:02:31 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.bankaccount.dao.IBankAccountDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.bankaccount.entity.BankAccount" id="resultMap">
        <id property="bankAccountCode" column="bankaccountcode" />
        <result property="bankName" column="bankname" />
        <result property="bankBranch" column="bankbranch" />
        <result property="bankNum" column="banknum" />
        <result property="accountName" column="accountname" />
        <result property="defaultChecked" column="defaultchecked" />
        <result property="createTime" column="createtime" />
        <result property="bankAccountPerson" column="bankaccountperson" />
        <result property="bankAccountType" column="bankaccounttype" />
    </resultMap>

    <sql id="baseCol">
        bankaccountcode, bankname, bankbranch, banknum, accountname, defaultchecked, createtime, bankaccountperson, bankaccounttype
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="bankAccountCode != null"><![CDATA[ and bankaccountcode like #{bankAccountCode} ]]></if>
            <if test="bankAccountCode_enum != null">
                <![CDATA[ and bankaccountcode in ]]>
                <foreach collection="bankAccountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankName != null"><![CDATA[ and bankname like #{bankName} ]]></if>
            <if test="bankName_enum != null">
                <![CDATA[ and bankname in ]]>
                <foreach collection="bankName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankBranch != null"><![CDATA[ and bankbranch like #{bankBranch} ]]></if>
            <if test="bankBranch_enum != null">
                <![CDATA[ and bankbranch in ]]>
                <foreach collection="bankBranch_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankNum != null"><![CDATA[ and banknum like #{bankNum} ]]></if>
            <if test="bankNum_enum != null">
                <![CDATA[ and banknum in ]]>
                <foreach collection="bankNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountName != null"><![CDATA[ and accountname like #{accountName} ]]></if>
            <if test="accountName_enum != null">
                <![CDATA[ and accountname in ]]>
                <foreach collection="accountName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="defaultChecked != null"><![CDATA[ and defaultchecked = #{defaultChecked} ]]></if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="bankAccountPerson != null"><![CDATA[ and bankaccountperson like #{bankAccountPerson} ]]></if>
            <if test="bankAccountPerson_enum != null">
                <![CDATA[ and bankaccountperson in ]]>
                <foreach collection="bankAccountPerson_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="bankAccountType != null"><![CDATA[ and bankaccounttype like #{bankAccountType} ]]></if>
            <if test="bankAccountType_enum != null">
                <![CDATA[ and bankaccounttype in ]]>
                <foreach collection="bankAccountType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'bankAccountCode'"><![CDATA[ bankaccountcode like #{item.value} ]]></if>
                    <if test="item.name == 'bankName'"><![CDATA[ bankname like #{item.value} ]]></if>
                    <if test="item.name == 'bankBranch'"><![CDATA[ bankbranch like #{item.value} ]]></if>
                    <if test="item.name == 'bankNum'"><![CDATA[ banknum like #{item.value} ]]></if>
                    <if test="item.name == 'accountName'"><![CDATA[ accountname like #{item.value} ]]></if>
                    <if test="item.name == 'bankAccountPerson'"><![CDATA[ bankaccountperson like #{item.value} ]]></if>
                    <if test="item.name == 'bankAccountType'"><![CDATA[ bankaccounttype like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'bankAccountCode_desc'"><![CDATA[ bankaccountcode desc, ]]></if>
            <if test="_orderBy == 'bankAccountCode_asc'"><![CDATA[ bankaccountcode, ]]></if>
            <if test="_orderBy == 'bankName_desc'"><![CDATA[ bankname desc, ]]></if>
            <if test="_orderBy == 'bankName_asc'"><![CDATA[ bankname, ]]></if>
            <if test="_orderBy == 'bankBranch_desc'"><![CDATA[ bankbranch desc, ]]></if>
            <if test="_orderBy == 'bankBranch_asc'"><![CDATA[ bankbranch, ]]></if>
            <if test="_orderBy == 'bankNum_desc'"><![CDATA[ banknum desc, ]]></if>
            <if test="_orderBy == 'bankNum_asc'"><![CDATA[ banknum, ]]></if>
            <if test="_orderBy == 'accountName_desc'"><![CDATA[ accountname desc, ]]></if>
            <if test="_orderBy == 'accountName_asc'"><![CDATA[ accountname, ]]></if>
            <if test="_orderBy == 'defaultChecked_desc'"><![CDATA[ defaultchecked desc, ]]></if>
            <if test="_orderBy == 'defaultChecked_asc'"><![CDATA[ defaultchecked, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'bankAccountPerson_desc'"><![CDATA[ bankaccountperson desc, ]]></if>
            <if test="_orderBy == 'bankAccountPerson_asc'"><![CDATA[ bankaccountperson, ]]></if>
            <if test="_orderBy == 'bankAccountType_desc'"><![CDATA[ bankaccounttype desc, ]]></if>
            <if test="_orderBy == 'bankAccountType_asc'"><![CDATA[ bankaccounttype, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.bankaccount.entity.BankAccount">
        insert into
        dyb_bankaccount(bankaccountcode,bankname,bankbranch,banknum,accountname,defaultchecked,createtime,bankaccountperson,bankaccounttype)
        values(#{bankAccountCode},#{bankName},#{bankBranch},#{bankNum},#{accountName},#{defaultChecked},#{createTime},#{bankAccountPerson},#{bankAccountType});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.bankaccount.entity.BankAccount">
        update dyb_bankaccount
        set bankname=#{bankName},bankbranch=#{bankBranch},banknum=#{bankNum},accountname=#{accountName},defaultchecked=#{defaultChecked},createtime=#{createTime},bankaccountperson=#{bankAccountPerson},bankaccounttype=#{bankAccountType}
        where bankaccountcode=#{bankAccountCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_bankaccount where bankaccountcode=#{bankAccountCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_bankaccount
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_bankaccount where bankaccountcode=#{bankAccountCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_bankaccount where bankaccountcode=#{bankAccountCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_bankaccount
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_bankaccount
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_bankaccount
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


