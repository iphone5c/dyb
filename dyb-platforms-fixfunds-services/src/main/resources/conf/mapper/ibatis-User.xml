<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/11 11:07:35 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.user.dao.IUserDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.user.entity.User" id="resultMap">
        <id property="userCode" column="usercode" />
        <result property="sequence" column="sequence" />
        <result property="userName" column="username" />
        <result property="userPassword" column="userpassword" />
        <result property="status" column="status" />
        <result property="description" column="description" />
        <result property="createTime" column="createtime" />
    </resultMap>

    <sql id="baseCol">
        usercode, sequence, username, userpassword, status, description, createtime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="userCode != null"><![CDATA[ and usercode like #{userCode} ]]></if>
            <if test="userCode_enum != null">
                <![CDATA[ and usercode in ]]>
                <foreach collection="userCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="sequence != null"><![CDATA[ and sequence = #{sequence} ]]></if>
            <if test="sequence_r_min != null"><![CDATA[ and sequence >= #{sequence_r_min} and sequence <= #{sequence_r_max} ]]></if>
            <if test="sequence_enum != null">
                <![CDATA[ and sequence in ]]>
                <foreach collection="sequence_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="userName != null"><![CDATA[ and username like #{userName} ]]></if>
            <if test="userName_enum != null">
                <![CDATA[ and username in ]]>
                <foreach collection="userName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="userPassword != null"><![CDATA[ and userpassword like #{userPassword} ]]></if>
            <if test="userPassword_enum != null">
                <![CDATA[ and userpassword in ]]>
                <foreach collection="userPassword_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="status != null"><![CDATA[ and status like #{status} ]]></if>
            <if test="status_enum != null">
                <![CDATA[ and status in ]]>
                <foreach collection="status_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="description != null"><![CDATA[ and description like #{description} ]]></if>
            <if test="description_enum != null">
                <![CDATA[ and description in ]]>
                <foreach collection="description_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'userCode'"><![CDATA[ usercode like #{item.value} ]]></if>
                    <if test="item.name == 'userName'"><![CDATA[ username like #{item.value} ]]></if>
                    <if test="item.name == 'userPassword'"><![CDATA[ userpassword like #{item.value} ]]></if>
                    <if test="item.name == 'status'"><![CDATA[ status like #{item.value} ]]></if>
                    <if test="item.name == 'description'"><![CDATA[ description like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'userCode_desc'"><![CDATA[ usercode desc, ]]></if>
            <if test="_orderBy == 'userCode_asc'"><![CDATA[ usercode, ]]></if>
            <if test="_orderBy == 'sequence_desc'"><![CDATA[ sequence desc, ]]></if>
            <if test="_orderBy == 'sequence_asc'"><![CDATA[ sequence, ]]></if>
            <if test="_orderBy == 'userName_desc'"><![CDATA[ username desc, ]]></if>
            <if test="_orderBy == 'userName_asc'"><![CDATA[ username, ]]></if>
            <if test="_orderBy == 'userPassword_desc'"><![CDATA[ userpassword desc, ]]></if>
            <if test="_orderBy == 'userPassword_asc'"><![CDATA[ userpassword, ]]></if>
            <if test="_orderBy == 'status_desc'"><![CDATA[ status desc, ]]></if>
            <if test="_orderBy == 'status_asc'"><![CDATA[ status, ]]></if>
            <if test="_orderBy == 'description_desc'"><![CDATA[ description desc, ]]></if>
            <if test="_orderBy == 'description_asc'"><![CDATA[ description, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.user.entity.User">
        insert into
        dyb_user(usercode,sequence,username,userpassword,status,description,createtime)
        values(#{userCode},#{sequence},#{userName},#{userPassword},#{status},#{description},#{createTime});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.user.entity.User">
        update dyb_user
        set sequence=#{sequence},username=#{userName},userpassword=#{userPassword},status=#{status},description=#{description},createtime=#{createTime}
        where usercode=#{userCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_user where usercode=#{userCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_user
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_user where usercode=#{userCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_user where usercode=#{userCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_user
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_user
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_user
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


