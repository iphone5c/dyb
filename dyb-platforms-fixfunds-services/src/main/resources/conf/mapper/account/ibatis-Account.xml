<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/26 9:13:00 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.account.dao.IAccountDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.account.entity.Account" id="resultMap">
        <id property="accountCode" column="accountcode" />
        <result property="accountName" column="accountname" />
        <result property="password" column="password" />
        <result property="tradePassword" column="tradepassword" />
        <result property="accountPhone" column="accountphone" />
        <result property="accountStatus" column="accountstatus" />
        <result property="accountType" column="accounttype" />
        <result property="accountForeignKey" column="accountforeignkey" />
        <result property="referrerCode" column="referrercode" />
        <result property="referrerLocation" column="referrerlocation" />
        <result property="registrationTime" column="registrationtime" />
        <result property="applyRegistrationTime" column="applyregistrationtime" />
        <result property="createTime" column="createtime" />
        <result property="qrcode" column="qrcode" />
        <result property="headPortrait" column="headportrait" />
    </resultMap>

    <sql id="baseCol">
        accountcode, accountname, password, tradepassword, accountphone, accountstatus, accounttype, accountforeignkey, referrercode, referrerlocation, registrationtime, applyregistrationtime, createtime,qrcode,headportrait
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountName != null"><![CDATA[ and accountname like #{accountName} ]]></if>
            <if test="accountName_enum != null">
                <![CDATA[ and accountname in ]]>
                <foreach collection="accountName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="password != null"><![CDATA[ and password like #{password} ]]></if>
            <if test="password_enum != null">
                <![CDATA[ and password in ]]>
                <foreach collection="password_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="tradePassword != null"><![CDATA[ and tradepassword like #{tradePassword} ]]></if>
            <if test="tradePassword_enum != null">
                <![CDATA[ and tradepassword in ]]>
                <foreach collection="tradePassword_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountPhone != null"><![CDATA[ and accountphone like #{accountPhone} ]]></if>
            <if test="accountPhone_enum != null">
                <![CDATA[ and accountphone in ]]>
                <foreach collection="accountPhone_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountStatus != null"><![CDATA[ and accountstatus like #{accountStatus} ]]></if>
            <if test="accountStatus_enum != null">
                <![CDATA[ and accountstatus in ]]>
                <foreach collection="accountStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountType != null"><![CDATA[ and accounttype like #{accountType} ]]></if>
            <if test="accountType_enum != null">
                <![CDATA[ and accounttype in ]]>
                <foreach collection="accountType_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountForeignKey != null"><![CDATA[ and accountforeignkey like #{accountForeignKey} ]]></if>
            <if test="accountForeignKey_enum != null">
                <![CDATA[ and accountforeignkey in ]]>
                <foreach collection="accountForeignKey_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="referrerCode != null"><![CDATA[ and referrercode like #{referrerCode} ]]></if>
            <if test="referrerCode_enum != null">
                <![CDATA[ and referrercode in ]]>
                <foreach collection="referrerCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="referrerLocation != null"><![CDATA[ and referrerlocation like #{referrerLocation} ]]></if>
            <if test="referrerLocation_enum != null">
                <![CDATA[ and referrerlocation in ]]>
                <foreach collection="referrerLocation_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="qrcode != null"><![CDATA[ and qrcode like #{qrcode} ]]></if>
            <if test="qrcode_enum != null">
                <![CDATA[ and qrcode in ]]>
                <foreach collection="qrcode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="registrationTime != null"><![CDATA[ and registrationtime = #{registrationTime} ]]></if>
            <if test="registrationTime_r_min != null"><![CDATA[ and registrationtime >= #{registrationTime_r_min} and registrationtime < #{registrationTime_r_max} ]]></if>
            <if test="applyRegistrationTime != null"><![CDATA[ and applyregistrationtime = #{applyRegistrationTime} ]]></if>
            <if test="applyRegistrationTime_r_min != null"><![CDATA[ and applyregistrationtime >= #{applyRegistrationTime_r_min} and applyregistrationtime < #{applyRegistrationTime_r_max} ]]></if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="headPortrait != null"><![CDATA[ and headportrait like #{headPortrait} ]]></if>
            <if test="headPortrait_enum != null">
                <![CDATA[ and headportrait in ]]>
                <foreach collection="headPortrait_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                    <if test="item.name == 'accountName'"><![CDATA[ accountname like #{item.value} ]]></if>
                    <if test="item.name == 'password'"><![CDATA[ password like #{item.value} ]]></if>
                    <if test="item.name == 'tradePassword'"><![CDATA[ tradepassword like #{item.value} ]]></if>
                    <if test="item.name == 'accountPhone'"><![CDATA[ accountphone like #{item.value} ]]></if>
                    <if test="item.name == 'accountStatus'"><![CDATA[ accountstatus like #{item.value} ]]></if>
                    <if test="item.name == 'accountType'"><![CDATA[ accounttype like #{item.value} ]]></if>
                    <if test="item.name == 'accountForeignKey'"><![CDATA[ accountforeignkey like #{item.value} ]]></if>
                    <if test="item.name == 'referrerCode'"><![CDATA[ referrercode like #{item.value} ]]></if>
                    <if test="item.name == 'referrerLocation'"><![CDATA[ referrerlocation like #{item.value} ]]></if>
                    <if test="item.name == 'qrcode'"><![CDATA[ qrcode like #{item.value} ]]></if>
                    <if test="item.name == 'headPortrait'"><![CDATA[ headportrait like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
            <if test="_orderBy == 'accountName_desc'"><![CDATA[ accountname desc, ]]></if>
            <if test="_orderBy == 'accountName_asc'"><![CDATA[ accountname, ]]></if>
            <if test="_orderBy == 'password_desc'"><![CDATA[ password desc, ]]></if>
            <if test="_orderBy == 'password_asc'"><![CDATA[ password, ]]></if>
            <if test="_orderBy == 'tradePassword_desc'"><![CDATA[ tradepassword desc, ]]></if>
            <if test="_orderBy == 'tradePassword_asc'"><![CDATA[ tradepassword, ]]></if>
            <if test="_orderBy == 'accountPhone_desc'"><![CDATA[ accountphone desc, ]]></if>
            <if test="_orderBy == 'accountPhone_asc'"><![CDATA[ accountphone, ]]></if>
            <if test="_orderBy == 'accountStatus_desc'"><![CDATA[ accountstatus desc, ]]></if>
            <if test="_orderBy == 'accountStatus_asc'"><![CDATA[ accountstatus, ]]></if>
            <if test="_orderBy == 'accountType_desc'"><![CDATA[ accounttype desc, ]]></if>
            <if test="_orderBy == 'accountType_asc'"><![CDATA[ accounttype, ]]></if>
            <if test="_orderBy == 'accountForeignKey_desc'"><![CDATA[ accountforeignkey desc, ]]></if>
            <if test="_orderBy == 'accountForeignKey_asc'"><![CDATA[ accountforeignkey, ]]></if>
            <if test="_orderBy == 'referrerCode_desc'"><![CDATA[ referrercode desc, ]]></if>
            <if test="_orderBy == 'referrerCode_asc'"><![CDATA[ referrercode, ]]></if>
            <if test="_orderBy == 'referrerLocation_desc'"><![CDATA[ referrerlocation desc, ]]></if>
            <if test="_orderBy == 'referrerLocation_asc'"><![CDATA[ referrerlocation, ]]></if>
            <if test="_orderBy == 'registrationTime_desc'"><![CDATA[ registrationtime desc, ]]></if>
            <if test="_orderBy == 'registrationTime_asc'"><![CDATA[ registrationtime, ]]></if>
            <if test="_orderBy == 'applyRegistrationTime_desc'"><![CDATA[ applyregistrationtime desc, ]]></if>
            <if test="_orderBy == 'applyRegistrationTime_asc'"><![CDATA[ applyregistrationtime, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'qrcode_desc'"><![CDATA[ qrcode desc, ]]></if>
            <if test="_orderBy == 'qrcode_asc'"><![CDATA[ qrcode, ]]></if>
            <if test="_orderBy == 'headPortrait_desc'"><![CDATA[ headportrait desc, ]]></if>
            <if test="_orderBy == 'headPortrait_asc'"><![CDATA[ headportrait, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.account.entity.Account">
        insert into
        dyb_account(accountcode,accountname,password,tradepassword,accountphone,accountstatus,accounttype,accountforeignkey,referrercode,referrerlocation,registrationtime,applyregistrationtime,createtime,qrcode,headportrait)
        values(#{accountCode},#{accountName},#{password},#{tradePassword},#{accountPhone},#{accountStatus},#{accountType},#{accountForeignKey},#{referrerCode},#{referrerLocation},#{registrationTime},#{applyRegistrationTime},#{createTime},#{qrcode},#{headPortrait});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.account.entity.Account">
        update dyb_account
        set accountname=#{accountName},password=#{password},tradepassword=#{tradePassword},accountphone=#{accountPhone},accountstatus=#{accountStatus},accounttype=#{accountType},accountforeignkey=#{accountForeignKey},referrercode=#{referrerCode},referrerlocation=#{referrerLocation},registrationtime=#{registrationTime},applyregistrationtime=#{applyRegistrationTime},createtime=#{createTime},qrcode=#{qrcode},headportrait=#{headPortrait}
        where accountcode=#{accountCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_account where accountcode=#{accountCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_account
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_account where accountcode=#{accountCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_account where accountcode=#{accountCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_account
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_account
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_account
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


