<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/18 18:30:51 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.binarydata.dao.IBinaryDataDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.binarydata.entity.BinaryData" id="resultMap">
        <id property="keyId" column="keyid" />
        <result property="content" column="content" />
        <result property="createTime" column="createtime" />
    </resultMap>

    <sql id="baseCol">
        keyid, content, createtime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="keyId != null"><![CDATA[ and keyid like #{keyId} ]]></if>
            <if test="keyId_enum != null">
                <![CDATA[ and keyid in ]]>
                <foreach collection="keyId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="content != null"><![CDATA[ and content like #{content} ]]></if>
            <if test="content_enum != null">
                <![CDATA[ and content in ]]>
                <foreach collection="content_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'keyId'"><![CDATA[ keyid like #{item.value} ]]></if>
                    <if test="item.name == 'content'"><![CDATA[ content like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'keyId_desc'"><![CDATA[ keyid desc, ]]></if>
            <if test="_orderBy == 'keyId_asc'"><![CDATA[ keyid, ]]></if>
            <if test="_orderBy == 'content_desc'"><![CDATA[ content desc, ]]></if>
            <if test="_orderBy == 'content_asc'"><![CDATA[ content, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.binarydata.entity.BinaryData">
        insert into
        dyb_binarydata(keyid,content,createtime)
        values(#{keyId},#{content},#{createTime});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.binarydata.entity.BinaryData">
        update dyb_binarydata
        set content=#{content},createtime=#{createTime}
        where keyid=#{keyId};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_binarydata where keyid=#{keyId};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_binarydata
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_binarydata where keyid=#{keyId};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_binarydata where keyid=#{keyId};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_binarydata
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_binarydata
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_binarydata
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


