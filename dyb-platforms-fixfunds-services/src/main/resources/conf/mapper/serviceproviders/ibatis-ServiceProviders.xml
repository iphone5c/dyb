<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/26 11:28:33 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.serviceproviders.dao.IServiceProvidersDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.serviceproviders.entity.ServiceProviders" id="resultMap">
        <id property="serviceProviderCode" column="serviceprovidercode" />
        <result property="serviceProviderName" column="serviceprovidername" />
        <result property="industry" column="industry" />
        <result property="sex" column="sex" />
        <result property="birthday" column="birthday" />
        <result property="email" column="email" />
        <result property="address" column="address" />
        <result property="province" column="province" />
        <result property="city" column="city" />
        <result property="certificateFile" column="certificatefile" />
        <result property="accountCode" column="accountcode" />
        <result property="idCard" column="idcard" />
    </resultMap>

    <sql id="baseCol">
        serviceprovidercode, serviceprovidername, industry, sex, birthday, email, address, province, city, certificatefile, accountcode, idcard
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="serviceProviderCode != null"><![CDATA[ and serviceprovidercode like #{serviceProviderCode} ]]></if>
            <if test="serviceProviderCode_enum != null">
                <![CDATA[ and serviceprovidercode in ]]>
                <foreach collection="serviceProviderCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="serviceProviderName != null"><![CDATA[ and serviceprovidername like #{serviceProviderName} ]]></if>
            <if test="serviceProviderName_enum != null">
                <![CDATA[ and serviceprovidername in ]]>
                <foreach collection="serviceProviderName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="industry != null"><![CDATA[ and industry like #{industry} ]]></if>
            <if test="industry_enum != null">
                <![CDATA[ and industry in ]]>
                <foreach collection="industry_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="sex != null"><![CDATA[ and sex like #{sex} ]]></if>
            <if test="sex_enum != null">
                <![CDATA[ and sex in ]]>
                <foreach collection="sex_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="birthday != null"><![CDATA[ and birthday = #{birthday} ]]></if>
            <if test="birthday_r_min != null"><![CDATA[ and birthday >= #{birthday_r_min} and birthday < #{birthday_r_max} ]]></if>
            <if test="email != null"><![CDATA[ and email like #{email} ]]></if>
            <if test="email_enum != null">
                <![CDATA[ and email in ]]>
                <foreach collection="email_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="address != null"><![CDATA[ and address like #{address} ]]></if>
            <if test="address_enum != null">
                <![CDATA[ and address in ]]>
                <foreach collection="address_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="province != null"><![CDATA[ and province like #{province} ]]></if>
            <if test="province_enum != null">
                <![CDATA[ and province in ]]>
                <foreach collection="province_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="city != null"><![CDATA[ and city like #{city} ]]></if>
            <if test="city_enum != null">
                <![CDATA[ and city in ]]>
                <foreach collection="city_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="certificateFile != null"><![CDATA[ and certificatefile like #{certificateFile} ]]></if>
            <if test="certificateFile_enum != null">
                <![CDATA[ and certificatefile in ]]>
                <foreach collection="certificateFile_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="idCard != null"><![CDATA[ and idcard like #{idCard} ]]></if>
            <if test="idCard_enum != null">
                <![CDATA[ and idcard in ]]>
                <foreach collection="idCard_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'serviceProviderCode'"><![CDATA[ serviceprovidercode like #{item.value} ]]></if>
                    <if test="item.name == 'serviceProviderName'"><![CDATA[ serviceprovidername like #{item.value} ]]></if>
                    <if test="item.name == 'industry'"><![CDATA[ industry like #{item.value} ]]></if>
                    <if test="item.name == 'sex'"><![CDATA[ sex like #{item.value} ]]></if>
                    <if test="item.name == 'email'"><![CDATA[ email like #{item.value} ]]></if>
                    <if test="item.name == 'address'"><![CDATA[ address like #{item.value} ]]></if>
                    <if test="item.name == 'province'"><![CDATA[ province like #{item.value} ]]></if>
                    <if test="item.name == 'city'"><![CDATA[ city like #{item.value} ]]></if>
                    <if test="item.name == 'certificateFile'"><![CDATA[ certificatefile like #{item.value} ]]></if>
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                    <if test="item.name == 'idCard'"><![CDATA[ idcard like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'serviceProviderCode_desc'"><![CDATA[ serviceprovidercode desc, ]]></if>
            <if test="_orderBy == 'serviceProviderCode_asc'"><![CDATA[ serviceprovidercode, ]]></if>
            <if test="_orderBy == 'serviceProviderName_desc'"><![CDATA[ serviceprovidername desc, ]]></if>
            <if test="_orderBy == 'serviceProviderName_asc'"><![CDATA[ serviceprovidername, ]]></if>
            <if test="_orderBy == 'industry_desc'"><![CDATA[ industry desc, ]]></if>
            <if test="_orderBy == 'industry_asc'"><![CDATA[ industry, ]]></if>
            <if test="_orderBy == 'sex_desc'"><![CDATA[ sex desc, ]]></if>
            <if test="_orderBy == 'sex_asc'"><![CDATA[ sex, ]]></if>
            <if test="_orderBy == 'birthday_desc'"><![CDATA[ birthday desc, ]]></if>
            <if test="_orderBy == 'birthday_asc'"><![CDATA[ birthday, ]]></if>
            <if test="_orderBy == 'email_desc'"><![CDATA[ email desc, ]]></if>
            <if test="_orderBy == 'email_asc'"><![CDATA[ email, ]]></if>
            <if test="_orderBy == 'address_desc'"><![CDATA[ address desc, ]]></if>
            <if test="_orderBy == 'address_asc'"><![CDATA[ address, ]]></if>
            <if test="_orderBy == 'province_desc'"><![CDATA[ province desc, ]]></if>
            <if test="_orderBy == 'province_asc'"><![CDATA[ province, ]]></if>
            <if test="_orderBy == 'city_desc'"><![CDATA[ city desc, ]]></if>
            <if test="_orderBy == 'city_asc'"><![CDATA[ city, ]]></if>
            <if test="_orderBy == 'certificateFile_desc'"><![CDATA[ certificatefile desc, ]]></if>
            <if test="_orderBy == 'certificateFile_asc'"><![CDATA[ certificatefile, ]]></if>
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
            <if test="_orderBy == 'idCard_desc'"><![CDATA[ idcard desc, ]]></if>
            <if test="_orderBy == 'idCard_asc'"><![CDATA[ idcard, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.serviceproviders.entity.ServiceProviders">
        insert into
        dyb_serviceproviders(serviceprovidercode,serviceprovidername,industry,sex,birthday,email,address,province,city,certificatefile,accountcode,idcard)
        values(#{serviceProviderCode},#{serviceProviderName},#{industry},#{sex},#{birthday},#{email},#{address},#{province},#{city},#{certificateFile},#{accountCode},#{idCard});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.serviceproviders.entity.ServiceProviders">
        update dyb_serviceproviders
        set serviceprovidername=#{serviceProviderName},industry=#{industry},sex=#{sex},birthday=#{birthday},email=#{email},address=#{address},province=#{province},city=#{city},certificatefile=#{certificateFile},accountcode=#{accountCode},idcard=#{idCard}
        where serviceprovidercode=#{serviceProviderCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_serviceproviders where serviceprovidercode=#{serviceProviderCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_serviceproviders
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_serviceproviders where serviceprovidercode=#{serviceProviderCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_serviceproviders where serviceprovidercode=#{serviceProviderCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_serviceproviders
        <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select
        <include refid="baseCol" />
        from dyb_serviceproviders
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_serviceproviders
        <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


