<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/27 19:46:15 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.commodity.dao.ICommodityDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.commodity.entity.Commodity" id="resultMap">
        <id property="commodityCode" column="commoditycode" />
        <result property="name" column="name" />
        <result property="commodityNum" column="commoditynum" />
        <result property="specifications" column="specifications" />
        <result property="price" column="price" />
        <result property="createTime" column="createtime" />
        <result property="accountCode" column="accountcode" />
    </resultMap>

    <sql id="baseCol">
        commoditycode, name, commoditynum, specifications, price, createtime, accountcode
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="commodityCode != null"><![CDATA[ and commoditycode like #{commodityCode} ]]></if>
            <if test="commodityCode_enum != null">
                <![CDATA[ and commoditycode in ]]>
                <foreach collection="commodityCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="name != null"><![CDATA[ and name like #{name} ]]></if>
            <if test="name_enum != null">
                <![CDATA[ and name in ]]>
                <foreach collection="name_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="commodityNum != null"><![CDATA[ and commoditynum like #{commodityNum} ]]></if>
            <if test="commodityNum_enum != null">
                <![CDATA[ and commoditynum in ]]>
                <foreach collection="commodityNum_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="specifications != null"><![CDATA[ and specifications like #{specifications} ]]></if>
            <if test="specifications_enum != null">
                <![CDATA[ and specifications in ]]>
                <foreach collection="specifications_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="price != null"><![CDATA[ and price = #{price} ]]></if>
            <if test="price_r_min != null"><![CDATA[ and price >= #{price_r_min} and price <= #{price_r_max} ]]></if>
            <if test="price_enum != null">
                <![CDATA[ and price in ]]>
                <foreach collection="price_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="accountCode != null"><![CDATA[ and accountcode like #{accountCode} ]]></if>
            <if test="accountCode_enum != null">
                <![CDATA[ and accountcode in ]]>
                <foreach collection="accountCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'commodityCode'"><![CDATA[ commoditycode like #{item.value} ]]></if>
                    <if test="item.name == 'name'"><![CDATA[ name like #{item.value} ]]></if>
                    <if test="item.name == 'commodityNum'"><![CDATA[ commoditynum like #{item.value} ]]></if>
                    <if test="item.name == 'specifications'"><![CDATA[ specifications like #{item.value} ]]></if>
                    <if test="item.name == 'accountCode'"><![CDATA[ accountcode like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'commodityCode_desc'"><![CDATA[ commoditycode desc, ]]></if>
            <if test="_orderBy == 'commodityCode_asc'"><![CDATA[ commoditycode, ]]></if>
            <if test="_orderBy == 'name_desc'"><![CDATA[ name desc, ]]></if>
            <if test="_orderBy == 'name_asc'"><![CDATA[ name, ]]></if>
            <if test="_orderBy == 'commodityNum_desc'"><![CDATA[ commoditynum desc, ]]></if>
            <if test="_orderBy == 'commodityNum_asc'"><![CDATA[ commoditynum, ]]></if>
            <if test="_orderBy == 'specifications_desc'"><![CDATA[ specifications desc, ]]></if>
            <if test="_orderBy == 'specifications_asc'"><![CDATA[ specifications, ]]></if>
            <if test="_orderBy == 'price_desc'"><![CDATA[ price desc, ]]></if>
            <if test="_orderBy == 'price_asc'"><![CDATA[ price, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
            <if test="_orderBy == 'accountCode_desc'"><![CDATA[ accountcode desc, ]]></if>
            <if test="_orderBy == 'accountCode_asc'"><![CDATA[ accountcode, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.commodity.entity.Commodity">
        insert into
        dyb_commodity(commoditycode,name,commoditynum,specifications,price,createtime,accountcode)
        values(#{commodityCode},#{name},#{commodityNum},#{specifications},#{price},#{createTime},#{accountCode});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.commodity.entity.Commodity">
        update dyb_commodity
        set name=#{name},commoditynum=#{commodityNum},specifications=#{specifications},price=#{price},createtime=#{createTime},accountcode=#{accountCode}
        where commoditycode=#{commodityCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_commodity where commoditycode=#{commodityCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_commodity
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_commodity where commoditycode=#{commodityCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_commodity where commoditycode=#{commodityCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_commodity
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_commodity
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_commodity
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


