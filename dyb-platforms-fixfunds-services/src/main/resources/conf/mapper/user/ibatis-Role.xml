<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2016/9/11 15:45:20 lenovo created. -->
<!-- Generated by Caven.CodeBuilder (funiJava.mybatis_map 1.0). -->

<mapper namespace="com.dyb.platforms.fixfunds.services.business.user.dao.IRoleDao">

    <resultMap type="com.dyb.platforms.fixfunds.services.business.user.entity.Role" id="resultMap">
        <id property="roleCode" column="rolecode" />
        <result property="sequence" column="sequence" />
        <result property="roleName" column="rolename" />
        <result property="description" column="description" />
        <result property="createTime" column="createtime" />
    </resultMap>

    <sql id="baseCol">
        rolecode, sequence, rolename, description, createtime
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="roleCode != null"><![CDATA[ and rolecode like #{roleCode} ]]></if>
            <if test="roleCode_enum != null">
                <![CDATA[ and rolecode in ]]>
                <foreach collection="roleCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="sequence != null"><![CDATA[ and sequence = #{sequence} ]]></if>
            <if test="sequence_r_min != null"><![CDATA[ and sequence >= #{sequence_r_min} and sequence <= #{sequence_r_max} ]]></if>
            <if test="sequence_enum != null">
                <![CDATA[ and sequence in ]]>
                <foreach collection="sequence_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="roleName != null"><![CDATA[ and rolename like #{roleName} ]]></if>
            <if test="roleName_enum != null">
                <![CDATA[ and rolename in ]]>
                <foreach collection="roleName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="description != null"><![CDATA[ and description like #{description} ]]></if>
            <if test="description_enum != null">
                <![CDATA[ and description in ]]>
                <foreach collection="description_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and createtime = #{createTime} ]]></if>
            <if test="createTime_r_min != null"><![CDATA[ and createtime >= #{createTime_r_min} and createtime < #{createTime_r_max} ]]></if>
            <if test="_default_mulattr != null">
                <![CDATA[ and ]]>
                <foreach collection="_default_mulattr" item="item" open="(" separator=" or " close=")">
                    <if test="item.name == 'roleCode'"><![CDATA[ rolecode like #{item.value} ]]></if>
                    <if test="item.name == 'roleName'"><![CDATA[ rolename like #{item.value} ]]></if>
                    <if test="item.name == 'description'"><![CDATA[ description like #{item.value} ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'roleCode_desc'"><![CDATA[ rolecode desc, ]]></if>
            <if test="_orderBy == 'roleCode_asc'"><![CDATA[ rolecode, ]]></if>
            <if test="_orderBy == 'sequence_desc'"><![CDATA[ sequence desc, ]]></if>
            <if test="_orderBy == 'sequence_asc'"><![CDATA[ sequence, ]]></if>
            <if test="_orderBy == 'roleName_desc'"><![CDATA[ rolename desc, ]]></if>
            <if test="_orderBy == 'roleName_asc'"><![CDATA[ rolename, ]]></if>
            <if test="_orderBy == 'description_desc'"><![CDATA[ description desc, ]]></if>
            <if test="_orderBy == 'description_asc'"><![CDATA[ description, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ createtime desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ createtime, ]]></if>
        </trim>
    </sql>

    <insert id="insertObject" parameterType="com.dyb.platforms.fixfunds.services.business.user.entity.Role">
        insert into
        dyb_role(rolecode,sequence,rolename,description,createtime)
        values(#{roleCode},#{sequence},#{roleName},#{description},#{createTime});
    </insert>

    <update id="updateObject" parameterType="com.dyb.platforms.fixfunds.services.business.user.entity.Role">
        update dyb_role
        set sequence=#{sequence},rolename=#{roleName},description=#{description},createtime=#{createTime}
        where rolecode=#{roleCode};
    </update>

    <delete id="deleteObject" parameterType="string">
        delete from dyb_role where rolecode=#{roleCode};
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams">
        delete from dyb_role
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="string" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_role where rolecode=#{roleCode};
    </select>

    <select id="getDetailObject" parameterType="string" resultMap="resultMap">
        select * from dyb_role where rolecode=#{roleCode};
    </select>

    <select id="queryCount" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultType="int">
        select count(*) from dyb_role
          <include refid="whereSql" />
    </select>

    <select id="queryBaseList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from dyb_role
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>

    <select id="queryDetailList" parameterType="com.dyb.platforms.fixfunds.services.utils.core.QueryParams" resultMap="resultMap">
        select * from dyb_role
          <include refid="whereSql" />
        <include refid="orderSql" />
    </select>
</mapper> 


